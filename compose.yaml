x-client-common: &client-common
  depends_on:
    api:
      condition: service_healthy
  env_file:
    - .env
  restart: unless-stopped
  networks:
    - app-network
  extra_hosts:
    - "host.docker.internal:host-gateway"

x-client-build-args: &client-build-args
  args:
    - NEXT_PUBLIC_API_BASEPATH=${NEXT_PUBLIC_API_BASEPATH}
    - API_BASEPATH=${API_BASEPATH}
    - NEXT_PUBLIC_PUBLIC_API_KEY=${NEXT_PUBLIC_PUBLIC_API_KEY}
    - NEXT_PUBLIC_SITE_URL=${NEXT_PUBLIC_SITE_URL}

services:
  api:
    build:
      context: ./server
      dockerfile: Dockerfile
      args:
        - ENVIRONMENT=${ENVIRONMENT}
        - WITH_GPU=${WITH_GPU:-false}
    ports:
      - "8000:8000"
    volumes:
      - ./server:/app
    environment:
      - LOG_LEVEL=debug
    env_file:
      - .env
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - app-network
  
  client:
    <<: *client-common
    build:
      context: ./client
      dockerfile: Dockerfile
      <<: *client-build-args
    ports:
      - "3000:3000"

  client-static-build:
    <<: *client-common
    build:
      context: .
      dockerfile: ./client-static-build/Dockerfile
      <<: *client-build-args
  
  client-admin:
    build:
      context: ./client-admin
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_CLIENT_BASEPATH=${NEXT_PUBLIC_CLIENT_BASEPATH}
        - NEXT_PUBLIC_API_BASEPATH=${NEXT_PUBLIC_API_BASEPATH}
        - NEXT_PUBLIC_ADMIN_API_KEY=${NEXT_PUBLIC_ADMIN_API_KEY}
        - CLIENT_STATIC_BUILD_BASEPATH=${CLIENT_STATIC_BUILD_BASEPATH}
    ports:
      - "4000:4000"
    env_file:
      - .env
    restart: unless-stopped
    networks:
      - app-network
      
  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama-data:/root/.ollama
    restart: unless-stopped
    networks:
      - app-network
    profiles:
      - ollama
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    # ollama イメージのデフォルトエントリーポイントを上書きして、モデルを自動ダウンロード
    entrypoint: ["/bin/sh", "-c"]
    command:
      - |
        ollama serve &
        sleep 10
        ollama pull hf.co/elyza/Llama-3-ELYZA-JP-8B-GGUF
        tail -f /dev/null

  light-llm:
    build:
      context: ./light-llm-server
      dockerfile: Dockerfile
    ports:
      - "11434:11434"
    networks:
      - app-network
    restart: unless-stopped
    entrypoint: ["/bin/sh", "-c"]
    command: 
      - uvicorn app.main:app --host 0.0.0.0 --port 11434
      
networks:
  app-network:
    driver: bridge

volumes:
  ollama-data:
    driver: local
